.ja {
  box-shadow: inset 0 0 0 0 #ffc107;
  
  padding: 0 .25rem;
  margin: 0 -.25rem;
  transition: color .3s ease-in-out, box-shadow .3s ease-in-out;
}
.ja:hover {
  color: #fff;
  box-shadow: inset 360px 0 0 0 #ffc107;;
}


/* Presentational styles */
.ja {
  
  font-family: 'Poppins', sans-serif;
  font-size: 27px;
  line-height: 1.5;
  text-decoration: none;
}
.ja1 {
    box-shadow: inset 0 0 0 0 #ffc107;
    
    padding: 0 .25rem;
    margin: 0 -.25rem;
    transition: color .3s ease-in-out, box-shadow .3s ease-in-out;
  }
  .ja1:hover {
    color: #fff;
    box-shadow: inset 360px 0 0 0 #ffc107;;
  }
  
  /* Presentational styles */
  .ja1 {
    
    font-family: 'Poppins', sans-serif;
    font-size: 27px;
    line-height: 1.5;
    text-decoration: none;
  }
  .ja2 {
    box-shadow: inset 0 0 0 0 #ffc107;
    
    padding: 0 .25rem;
    margin: 0 -.25rem;
    transition: color .3s ease-in-out, box-shadow .3s ease-in-out;
  }
  .ja2:hover {
    color: #fff;
    box-shadow: inset 360px 0 0 0 #ffc107;;
  }
  
  /* Presentational styles */
  .ja2 {
    
    font-family: 'Poppins', sans-serif;
    font-size: 27px;
    line-height: 1.5;
    text-decoration: none;
  }
  .map-responsive{
    overflow:hidden;
    padding-bottom:50%;
    position:relative;
    height:0;
}
.map-responsive iframe{
    left:0;
    top:0;

    width:100%;
    position:absolute;
}
* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {
  background: #F4F2F3;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

h1 {
  font-family: 'Fjalla One', sans-serif;
  margin-bottom: 0.15rem;
}

h2 {
  font-family: 'Cutive Mono', 'Courier New';
  font-size: 1rem;
  letter-spacing: 1px;
  margin-bottom: 4rem;
}

label {
  cursor: pointer;
}

svg {
  width: 3rem;
  height: 3rem;
  padding: 0.15rem;
}


/* hide radio buttons */

input[name="star"] {
  display: inline-block;
  width: 0;
  opacity: 0;
  margin-left: -2px;
}

/* hide source svg */

.star-source {
  width: 0;
  height: 0;
  visibility: hidden;
}


/* set initial color to transparent so fill is empty*/

.star {
  color: transparent;
  transition: color 0.2s ease-in-out;
}


/* set direction to row-reverse so 5th star is at the end and ~ can be used to fill all sibling stars that precede last starred element*/

.star-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
}

label:hover ~ label .star,
svg.star:hover,
input[name="star"]:focus ~ label .star,
input[name="star"]:checked ~ label .star {
  color: yellow;
}

input[name="star"]:checked + label .star {
  animation: starred 0.5s;
}

input[name="star"]:checked + label {
  animation: scaleup 1s;
}

@keyframes scaleup {
  from {
    transform: scale(1.2);
  }
  to {
    transform: scale(1);
  }
}

@keyframes starred {
  from {
    color: yellow;
  }
  to {
    color: yellow;
  }
}